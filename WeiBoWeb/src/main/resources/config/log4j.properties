# %c 输出日记信息所属的类的全名
# %d 输出日记时间点的日期或时间，默许格式为ISO8601，也可以或许在厥后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出近似：2002-10-# 18- 22：10：28
# %f 输出日记信息所属的类的类名
# %l 输出日记事件的产生地位，即输出日记信息的语句处于它地点的类的第几行
# %m 输出代码中指定的信息，如log(message)中的message
# %n 输出一个回车换行符，Windows平台为“ ”，Unix平台为“ ”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。假定是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自利用启动到输出该日记信息所破钞的毫秒数
# %t 输生产生该日记事件的线程名
### set log levels - for more verbose logging change 'info' to 'debug' ###
log4j.rootLogger=info,console,LogFile,ErrorFile
log4j.appender.console=org.apache.log4j.ConsoleAppender
log4j.appender.console.Target=System.out
log4j.appender.console.layout=org.apache.log4j.PatternLayout
log4j.appender.console.layout.ConversionPattern=[%t:%r] %-d{yyyy-MM-dd HH:mm:ss}(%c) - [%5p] %m%n


log4j.appender.LogFile= org.apache.log4j.DailyRollingFileAppender
log4j.appender.LogFile.File=${catalina.base}/logs/WeiBoRelations/app.log
log4j.appender.LogFile.Append=true
log4j.appender.LogFile.Threshold=debug
log4j.appender.LogFile.layout= org.apache.log4j.PatternLayout
log4j.appender.LogFile.layout.ConversionPattern=[%t:%r] %-d{yyyy-MM-dd HH:mm:ss}(%c) - [%5p] %m%n

log4j.appender.ErrorFile= org.apache.log4j.DailyRollingFileAppender
log4j.appender.ErrorFile.File=${catalina.base}/logs/WeiBoRelations/err.log
log4j.appender.ErrorFile.Append=true
log4j.appender.ErrorFile.Threshold=error
log4j.appender.ErrorFile.layout=org.apache.log4j.PatternLayout
log4j.appender.ErrorFile.layout.ConversionPattern=[%t:%r] %-d{yyyy-MM-dd HH:mm:ss}(%c) - [%5p] %m%n


log4j.logger.action=debug
